AWSTemplateFormatVersion: '2010-09-09'
Description: ''

## ============================
## ==== Parameter Assignment===


Parameters:

  pVPCid:
    Type: String
    Description: "VPC Id"
    Default: "vpc-064adfdf4fc98a417"

  pSubnetsGroup:
    Type: CommaDelimitedList
    Description: "Subnet Id for PrivateSubnet0"
    Default: "subnet-001b5c60c3618121c, subnet-0d661cb50f5ece38d, subnet-083de05ef504bca81, subnet-0015614a29d20dad2, subnet-053dde501374abc88, subnet-02c2bd5cf2c1f98fd"
        
  pSecurityGroup:
    Type: String
    Description: "Inbound access on Postgres from Deere internal network"
    Default: "sg-007a1675e982420b9"

  pRDSType:
    AllowedValues:
      - db-cluster
      - db-instance
    Default: db-instance
    Type: String

  pLambdaName:
    Type: String
    Default: "NLBAutoUpdate"
    MinLength: '1'
    MaxLength: '128'
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'


  ###### Env Var for lambda function need to put DB end point and NLB TG arn #####

  pRDSPOrt:
    Type: Number
    Default: 5432
    MinValue: 1115
    MaxValue: 65535

  pDBEndPoint: 
    Type: String
    Default: "database-1.c9dmc1iavuno.us-east-1.rds.amazonaws.com"
    MinLength: '1'
    MaxLength: '128'

  rNetworkLoadBalancerTargetGroup:
     Type: String
     Default: ""


Resources:

## ==== IAM Role for S3 Buket access 
 rLambdaPrivsRole:
   Type: AWS::IAM::Role
   Properties:
     AssumeRolePolicyDocument:
       Version: '2012-10-17'
       Statement:
       - Effect: Allow
         Principal:
           Service:
           - lambda.amazonaws.com
         Action:
         - sts:AssumeRole
     Path: "/"
     Policies:
       - PolicyName: !Sub 'UpdateNLBIpPolicy${AWS::StackName}'
         PolicyDocument:
           Version: '2012-10-17'
           Statement:
           - Effect: Allow
             Action:
             - ec2:CreateNetworkInterface 
             - ec2:DeleteNetworkInterface 
             - ec2:DescribeNetworkInterfaces
             - elasticloadbalancing:DescribeTargetHealth
             - elasticloadbalancing:DeregisterTargets
             - elasticloadbalancing:RegisterTargets
             Resource: "*"
           - Effect: Allow
             Action:
             - logs:CreateLogGroup
             Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
           - Effect: Allow
             Action:
             - logs:CreateLogStream
             - logs:PutLogEvents
             Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${pLambdaName}:*'
     ManagedPolicyArns:
       - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     RoleName: !Sub "UpdateNLBIpRole-${AWS::StackName}"
    